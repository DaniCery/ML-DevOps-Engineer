[1mcollected 1 item                                                                                            
test_data.py::test_kolmogorov_smirnov [31mFAILED
================================================= FAILURES ==================================================
[31m[1m__________________________________________ test_kolmogorov_smirnov __________________________________________
data = (       Unnamed: 0.1  Unnamed: 0  ...                         title                                  text_feature
0   ...92         13606       13606  ...          Euphoric Hardstyle               Everybody Knows
[12593 rows x 20 columns])
    def test_kolmogorov_smirnov(data):
        sample1, sample2 = data
        #fill na
        # For numerical columns:
        for col in sample1.select_dtypes(include=[np.number]).columns:
            sample1[col].fillna(sample1[col].median(), inplace=True)
            sample2[col].fillna(sample2[col].median(), inplace=True)
        # For categorical columns:
        for col in sample1.select_dtypes(include=['object']).columns:
            sample1[col].fillna(sample1[col].mode()[0], inplace=True)
            sample2[col].fillna(sample2[col].mode()[0], inplace=True)
        numerical_columns = [
            "danceability",
            "energy",
            "loudness",
            "speechiness",
            "acousticness",
            "instrumentalness",
            "liveness",
            "valence",
            "tempo",
            "duration_ms"
        ]
        # Let's decide the Type I error probability (related to the False Positive Rate)
        alpha = 0.001
        # Bonferroni correction for multiple hypothesis testing
        # (see my blog post on this topic to see where this comes from:
        # https://towardsdatascience.com/precision-and-recall-trade-off-and-multiple-hypothesis-testing-family-wise-error-rate-vs-false-71a85057ca2b)
        alpha_prime = 1 - (1 - alpha)**(1 / len(numerical_columns))
        for col in numerical_columns:
            # Use the 2-sample KS test (scipy.stats.ks_2sample) on the column
            # col
            # Apply KS test to column "loudness"
            ts, p_value = scipy.stats.ks_2samp(
                                                sample1[col],
                                                sample2[col],
                                                alternative='two-sided'
                                                )
            # Add an assertion so that the test fails if p_value > alpha_prime
>           assert p_value > alpha_prime, "KS test rejected the null hyp. at the 2 sigma level"
[31m[1mE           AssertionError: KS test rejected the null hyp. at the 2 sigma level
[31m[1mE           assert 0.0 > 0.00010004502852067887
[31m[1mtest_data.py[39m[22m:72: AssertionError
[33m============================================= warnings summary ==============================================
<frozen importlib._bootstrap>:488
  <frozen importlib._bootstrap>:488: DeprecationWarning: Type google._upb._message.MessageMapContainer uses PyType_Spec with a metaclass that has custom tp_new. This is deprecated and will no longer be allowed in Python 3.14.
<frozen importlib._bootstrap>:488
  <frozen importlib._bootstrap>:488: DeprecationWarning: Type google._upb._message.ScalarMapContainer uses PyType_Spec with a metaclass that has custom tp_new. This is deprecated and will no longer be allowed in Python 3.14.
../../../../../../../../../../opt/anaconda3/envs/mlflow-60000e2b97642ccc38c7a9ee503977f0abd54819/lib/python3.12/site-packages/wandb/analytics/sentry.py:90
  /opt/anaconda3/envs/mlflow-60000e2b97642ccc38c7a9ee503977f0abd54819/lib/python3.12/site-packages/wandb/analytics/sentry.py:90: SentryHubDeprecationWarning: `sentry_sdk.Hub` is deprecated and will be removed in a future major release. Please consult our 1.x to 2.x migration guide for details on how to migrate `Hub` usage to the new API: https://docs.sentry.io/platforms/python/migration/1.x-to-2.x
    self.hub = sentry_sdk.Hub(client)
../../../../../../../../../../opt/anaconda3/envs/mlflow-60000e2b97642ccc38c7a9ee503977f0abd54819/lib/python3.12/site-packages/google/protobuf/internal/well_known_types.py:174
../../../../../../../../../../opt/anaconda3/envs/mlflow-60000e2b97642ccc38c7a9ee503977f0abd54819/lib/python3.12/site-packages/google/protobuf/internal/well_known_types.py:174
../../../../../../../../../../opt/anaconda3/envs/mlflow-60000e2b97642ccc38c7a9ee503977f0abd54819/lib/python3.12/site-packages/google/protobuf/internal/well_known_types.py:174
test_data.py::test_kolmogorov_smirnov
test_data.py::test_kolmogorov_smirnov
test_data.py::test_kolmogorov_smirnov
  /opt/anaconda3/envs/mlflow-60000e2b97642ccc38c7a9ee503977f0abd54819/lib/python3.12/site-packages/google/protobuf/internal/well_known_types.py:174: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    self.FromDatetime(datetime.datetime.utcnow())
test_data.py: 15 warnings
  /Users/f81658c/Documents/Git repo/ML-DevOps-Engineer/nd0821-c2-build-model-workflow-exercises/lesson-3-data-validation/exercises/exercise_8/starter/test_data.py:31: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
  The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
  For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
    sample1[col].fillna(sample1[col].median(), inplace=True)
test_data.py: 15 warnings
  /Users/f81658c/Documents/Git repo/ML-DevOps-Engineer/nd0821-c2-build-model-workflow-exercises/lesson-3-data-validation/exercises/exercise_8/starter/test_data.py:32: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
  The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
  For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
    sample2[col].fillna(sample2[col].median(), inplace=True)
test_data.py::test_kolmogorov_smirnov
  /Users/f81658c/Documents/Git repo/ML-DevOps-Engineer/nd0821-c2-build-model-workflow-exercises/lesson-3-data-validation/exercises/exercise_8/starter/test_data.py:36: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
  The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
  For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
    sample1[col].fillna(sample1[col].mode()[0], inplace=True)
test_data.py::test_kolmogorov_smirnov
  /Users/f81658c/Documents/Git repo/ML-DevOps-Engineer/nd0821-c2-build-model-workflow-exercises/lesson-3-data-validation/exercises/exercise_8/starter/test_data.py:37: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
  The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
  For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
    sample2[col].fillna(sample2[col].mode()[0], inplace=True)
-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
[36m[1m========================================== short test summary info ==========================================
[31mFAILED[39m test_data.py::[1mtest_kolmogorov_smirnov[22m - AssertionError: KS test rejected the null hyp. at the 2 sigma level
[31m====================================== [1m1 failed[39m[22m, [33m41 warnings[31m in 5.02s =======================================